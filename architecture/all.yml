---
path_vm_info: /Volumes/Data/gitlab/python-eveng-api/VM/VM_informations.yml
path_to_save: /Volumes/Data/gitlab/python-eveng-api/architecture/
project:
  path: /Users/
  name: spine-leaf
  version: 1
  author: DylanHamel
  description: Spine and Leaf architecture for test befor prod
  body: Actual label

devices:
  - type: qemu
    template: cumulus
    config: Unconfigured
    delay: 0
    icon: router.png
    image: cumulus-vx-3.7.3
    name: Spine01
    left: 45%
    top: 20%
    ram: 1024
    console: telnet 
    cpu: 1
    ethernet: 8 
    uuid: 641a4800-1b19-427c-ae87-5555590b7790
  - type: qemu
    template: cumulus
    config: Unconfigured
    delay: 0
    icon: router.png
    image: cumulus-vx-3.7.3
    name: Spine02
    left: 55%
    top: 20%
    ram: 1024
    console: telnet 
    cpu: 1
    ethernet: 8 
    uuid: 641a4800-1b19-427c-ae87-6666690b7790
  - type: qemu
    template: cumulus
    config: Unconfigured
    delay: 0
    icon: router.png
    image: cumulus-vx-3.7.3
    name: Leaf01
    left: 35%
    top: 35%
    ram: 1024
    console: telnet 
    cpu: 1
    ethernet: 8 
    uuid: 641a4800-1b19-427c-ae87-1111190b7790
  - type: qemu
    template: cumulus
    config: Unconfigured
    delay: 0
    icon: router.png
    image: cumulus-vx-3.7.3
    name: Leaf02
    left: 45%
    top: 35%
    ram: 1024
    console: telnet 
    cpu: 1
    ethernet: 8 
    uuid: 641a4800-1b19-427c-ae87-2222290b7790
  - type: qemu
    template: cumulus
    config: Unconfigured
    delay: 0
    icon: router.png
    image: cumulus-vx-3.7.3
    name: Leaf03
    left: 55%
    top: 35%
    ram: 1024
    console: telnet 
    cpu: 1
    ethernet: 8 
    uuid: 641a4800-1b19-427c-ae87-3333390b7790
  - type: qemu
    template: cumulus
    config: Unconfigured
    delay: 0
    icon: router.png
    image: cumulus-vx-3.7.3
    name: Leaf04
    left: 65%
    top: 35%
    ram: 1024
    console: telnet 
    cpu: 1
    ethernet: 8 
    uuid: 641a4800-1b19-427c-ae87-4444490b7790

links:
  - id: 1
    type: ethernet
    # if it's a connexion between 2 devices, use bridge
    network: bridge
    src: Spine01
    sport: swp1
    dst: Leaf01
    dport: swp1
  - id: 2
    type: ethernet
    # if it's a connexion between 2 devices, use bridge
    network: bridge
    src: Spine01
    sport: swp2
    dst: Leaf02
    dport: swp1
  - id: 3
    type: ethernet
    # if it's a connexion between 2 devices, use bridge
    network: bridge
    src: Spine01
    sport: swp3
    dst: Leaf03
    dport: swp1
  - id: 4
    type: ethernet
    # if it's a connexion between 2 devices, use bridge
    network: bridge
    src: Spine01
    sport: swp4
    dst: Leaf04
    dport: swp1
  - id: 5
    type: ethernet
    # if it's a connexion between 2 devices, use bridge
    network: bridge
    src: Spine02
    sport: swp4
    dst: Leaf04
    dport: swp2
  - id: 6
    type: ethernet
    # if it's a connexion between 2 devices, use bridge
    network: bridge
    src: Spine02
    sport: swp3
    dst: Leaf03
    dport: swp2
  - id: 7
    type: ethernet
    # if it's a connexion between 2 devices, use bridge
    network: bridge
    src: Spine02
    sport: swp2
    dst: Leaf02
    dport: swp2
  - id: 8
    type: ethernet
    # if it's a connexion between 2 devices, use bridge
    network: bridge
    src: Spine02
    sport: swp1
    dst: Leaf01
    dport: swp2
    #
    # Out-Of-Band connection
    #
  - id: 9
    type: ethernet
    network: pnet4
    src: Spine01
    sport: eth0
    dst: oobNet
    dport: oobPort
    
    